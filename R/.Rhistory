X1stFlrSF,GarageArea,BsmtFinSF1,X2ndFlrSF,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:9] <- as.data.frame(lapply(knn_house_nonfactor[,2:9], normalize))
knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
aaa <- knnreg(knn_train[,1:ncol(knn_train)-1],knn_train$SalePrice,k=8)
aaa_8 <- predict(aaa, knn_test)
aaa_result8 <- data.frame(Id=test$Id, SalePrice=aaa_8)
write.csv(aaa_result8, "aaa8.csv", row.names=FALSE)
aaa <- knnreg(knn_train[,1:ncol(knn_train)-1],knn_train$SalePrice,k=7)
aaa_8 <- predict(aaa, knn_test)
aaa_result8 <- data.frame(Id=test$Id, SalePrice=aaa_8)
write.csv(aaa_result8, "aaa8.csv", row.names=FALSE)
start = Sys.time()
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
end = Sys.time()
end-start
knn_pred
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_w8.csv", row.names=FALSE)
aaa <- knnreg(knn_train[,1:ncol(knn_train)-1],knn_train$SalePrice,k=8)
aaa_8 <- predict(aaa, knn_test)
aaa_result8 <- data.frame(Id=test$Id, SalePrice=aaa_8)
write.csv(aaa_result8, "aaa8.csv", row.names=FALSE)
start = Sys.time()
knn_pred <- knn_predict(knn_train, knn_test, 8)
end = Sys.time()
end-start
knn_pred
aaa_8
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_8.csv", row.names=FALSE)
manhattan_dist <- function(x,y) {
d = 0
for (i in 1:length(x)) {
d = d + abs(x[[i]] - y[[i]])^2
}
return(d)
}
knn_predict_weighted <- function(training, test, k) {
pred <- c()
for (i in 1:nrow(test)) {
dist <- c()
for (j in 1:nrow(training)) {
dist <- c(dist, manhattan_dist(test[i,], training[j,]))
}
dist_df <- data.frame(SalePrice = training$SalePrice, dist)
dist_df <- dist_df[order(dist_df$dist),]
dist_df <- dist_df[1:k,]
num = 0
denom = 0
for (p in 1:nrow(dist_df)) {
if (dist_df$dist[p] != 0) {
num = num + dist_df$SalePrice[p] / dist_df$dist[p]
denom = denom + 1/dist_df$dist[p]
}
}
pred <- c(pred, num/denom)
}
return(pred)
}
start = Sys.time()
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
end = Sys.time()
end-start
knn_pred
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_w8_manhattan.csv", row.names=FALSE)
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,TotalBsmtSF,
X1stFlrSF,GarageArea,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice))
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,TotalBsmtSF,
X1stFlrSF,GarageArea,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house_nonfactor[,2:10] <- as.data.frame(lapply(knn_house_nonfactor[,2:10], normalize))
knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_pred <- knn_predict_weighted(knn_train, knn_test, 6)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k6_p9_w_manhattan.csv", row.names=FALSE)
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k8_p9_w_manhattan.csv", row.names=FALSE)
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,TotalBsmtSF,
X1stFlrSF,GarageArea,BsmtFinSF1,X2ndFlrSF,YearBuilt,FullBath,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
corr_df[order(-corr_df$cor),][2:15,]
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,FullBath,TotRmsAbvGrd,YearBuilt,YearRemodAdd,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:ncol(knn_house_nonfactor)-2] <-
as.data.frame(lapply(knn_house_nonfactor[,2:ncol(knn_house_nonfactor)-2], normalize))
ncol(knn_house_nonfactor)-2
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
View(knn_house_nonfactor)
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
#write.csv(knn_final,'knn_house.csv')
rm(knn_result,knn_result1,knn_result2,knn_result3,knn_result4,knn_result5)
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_pred <- knn_predict_weighted(knn_train, knn_test, 6)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k6_p10_w_manhattan.csv", row.names=FALSE)
rm(knn_pred1,knn_pred2,knn_pred3,knn_pred4,knn_pred5,knn_pred_w1,knn_pred_w2,knn_pred_w3,knn_pred_w4,knn_pred_w5,knn_predictions)
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k8_p10_w_manhattan.csv", row.names=FALSE)
rm(p1,p2,p3,p4,p5,knn_result_w1,knn_result_w2,knn_result_w3,knn_result_w4,knn_result_w5)
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,FullBath,TotRmsAbvGrd,YearBuilt,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,FullBath,TotRmsAbvGrd,isTrain,SalePrice))
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice)) # 0.16343
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house <- house
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice)) # 0.16343
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_house <- house
knn_house[knn_house$GrLivArea<=4500 & knn_house$isTrain==1,]
knn_house[knn_house$GrLivArea>4500 & knn_house$isTrain==1,]
knn_house <- knn_house[knn_house$GrLivArea<=4500 & knn_house$isTrain==1,]
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice)) # 0.16343
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
View(knn_train)
str(knn_train)
knn_test
View(knn_house)
knn_house[knn_house$GrLivArea>4500,]
knn_house <- house
knn_house[knn_house$GrLivArea>4500,]
knn_house <- house
knn_house[knn_house$GrLivArea>4500,]
train <- read.csv('train.csv')
test <- read.csv('test.csv')
test$SalePrice <- NA
train$isTrain <- 1
test$isTrain <- 0
house <- rbind(train, test)
# fill in missing values for house (train+test) ---------------------------
house_missing <- data.frame(index = names(house), missing_count = colSums(sapply(house, is.na)))
house_missing$index[which(house_missing$missing_count>0)]
# fill in missing LotFrontage and GarageArea
house$LotFrontage[which(is.na(house$LotFrontage))] <- mean(house$LotFrontage, na.rm=TRUE)
house$GarageArea[which(is.na(house$GarageArea))] <- mean(house$GarageArea, na.rm=TRUE)
house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)] <-
lapply(house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)], as.character)
house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)][is.na(house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)])] <- 'None'
house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)] <-
lapply(house[,c(7,26,31,32,33,34,36,43,58,59,61,64,65,73:75)], as.factor)
# fill in missing MasVnrArea,GarageYrBlt,BsmtFinSF1,BsmtFinSF2,BsmtUnfSF,TotalBsmtSF,BsmtFullBath,BsmtHalfBath
house[,c(27,35,37:39,48,49,60)][is.na(house[,c(27,35,37:39,48,49,60)])] <- 0
# function for get mode https://www.tutorialspoint.com/r/r_mean_median_mode.htm
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# missing values for MSZoning,Utilities,Exterior1st,Exterior2nd,KitchenQual,Functional,GarageCars,SaleType
modeList <- c(3,10,24,25,54,56,62,79)
for (i in 1:length(modeList)) {
house[is.na(house[,modeList[i]]),modeList[i]] <- getmode(house[,modeList[i]])
}
# separate back to train and test
train <- house[house$isTrain==1,]
train <- subset(train,select=-isTrain)
test <- house[house$isTrain==0,]
test <- subset(test,select=-c(isTrain,SalePrice))
cor_data <- train %>% select_if(negate(is.factor))
corr <- as.data.frame(round(cor(cor_data),2))
corr_df <- data.frame(var = colnames(cor_data), cor = corr$SalePrice)
corr_df[order(-corr_df$cor),][2:15,]
knn_house <- house
knn_house[knn_house$GrLivArea>4500,]
View(test)
knn_house[knn_house$GrLivArea>4500 & knn_house$isTrain==1,]
knn_house - knn_house[knn_house$GrLivArea>4500 & knn_house$isTrain==1,]
knn_house[!(knn$Id %in% c(524,1299))]
subset(knn_house, !(knn_house$Id %in% c(524,1299)))
nrow(subset(knn_house, !(knn_house$Id %in% c(524,1299))))
knn_house <- subset(house, !(house$Id %in% c(524,1299)))
knn_house <- select(knn_house, c(Id,OverallQual,GrLivArea,GarageCars,GarageArea,TotalBsmtSF,
X1stFlrSF,BsmtFinSF1,X2ndFlrSF,YearBuilt,isTrain,SalePrice)) # 0.16343
knn_house_nonfactor <- knn_house %>%  select_if(negate(is.factor))
knn_house_factor <- data.frame(Id=knn_house$Id,knn_house %>% select_if(is.factor))
knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)] <-
as.data.frame(lapply(knn_house_nonfactor[,2:(ncol(knn_house_nonfactor)-2)], normalize))
#knn_house_factor <- knn_house_factor[,-c(2:3)]
#knn_final <- merge(knn_house_factor,knn_house_nonfactor,by='Id')
knn_final <- knn_house_nonfactor
knn_train <- knn_final[knn_final$isTrain==1,]
knn_train <- subset(knn_train,select=-c(Id,isTrain))
knn_test <- knn_final[knn_final$isTrain==0,]
knn_test <- subset(knn_test,select=-c(Id,isTrain,SalePrice))
knn_ind <- sample(1:nrow(knn_train), size=0.75*nrow(knn_train))
knn_training_cv <- knn_train[knn_ind,]
knn_validation <- knn_train[-knn_ind,]
for (i in 1:10) {
aaa <- knnreg(knn_training_cv[,1:ncol(knn_training_cv)-1],knn_training_cv$SalePrice,k=i)
aaa_8 <- predict(aaa, knn_validation[,1:ncol(knn_validation)-1])
rmse <- sqrt(sum((log(aaa_8+1)-log(knn_validation$SalePrice+1))^2)/length(aaa_8))
print(i)
print(rmse)
}
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k8_p9_w_manhattan_rmoutlier.csv", row.names=FALSE)
knn_pred <- knn_predict_weighted(knn_train, knn_test, 6)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k6_p9_w_manhattan_rmoutlier.csv", row.names=FALSE)
knn_pred <- knn_predict_weighted(knn_train, knn_test, 7)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k7_p9_w_manhattan_rmoutlier.csv", row.names=FALSE)
rnorm(10)
rnorm(10)
rnorm(10)
set.seed(10)
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(10)
pdist([1 2 3], [4 5 6], 'chisq')
sum((knn_test - knn_train[,1:(nrow(knn_train)-1)])^2/(knn_test + knn_train[,1:(nrow(knn_train)-1)]))
knn_train[,1:(nrow(knn_train)-1)]
sum((knn_test - knn_train[,1:(ncol(knn_train)-1)])^2/(knn_test + knn_train[,1:(ncol(knn_train)-1)]))
sum((knn_test[1,] - knn_train[,1:(ncol(knn_train)-1)])^2/(knn_test + knn_train[,1:(ncol(knn_train)-1)]))
sum((knn_test[1,] - knn_train[1,1:(ncol(knn_train)-1)])^2/(knn_test + knn_train[1,1:(ncol(knn_train)-1)]))
sum((knn_test[1,] - knn_train[1,1:(ncol(knn_train)-1)])^2/(knn_test[1,] + knn_train[1,1:(ncol(knn_train)-1)]))
knn_predict_weighted <- function(training, test, k) {
pred <- c()
for (i in 1:nrow(test)) {
dist <- c()
for (j in 1:nrow(training)) {
#dist <- c(dist, manhattan_dist(test[i,], training[j,]))
chisq_dist <- sum((test[i,] - training[j,1:(ncol(training)-1)])^2/(test[1,] + training[1,1:(ncol(training)-1)]))
dist <- c(dist, chisq_dist)
}
dist_df <- data.frame(SalePrice = training$SalePrice, dist)
dist_df <- dist_df[order(dist_df$dist),]
dist_df <- dist_df[1:k,]
num = 0
denom = 0
for (p in 1:nrow(dist_df)) {
if (dist_df$dist[p] != 0) {
num = num + dist_df$SalePrice[p] / dist_df$dist[p]
denom = denom + 1/dist_df$dist[p]
}
}
pred <- c(pred, num/denom)
}
return(pred)
}
start=Sys.time()
knn_predict_weighted(knn_train,knn_test[1,],8)
start=Sys.time()
knn_predict_weighted(knn_train,knn_test[1,],8)
end=Sys.time()
end-start
knn_predict_weighted <- function(training, test, k) {
pred <- c()
for (i in 1:nrow(test)) {
dist <- c()
for (j in 1:nrow(training)) {
dist <- c(dist, manhattan_dist(test[i,], training[j,]))
}
dist_df <- data.frame(SalePrice = training$SalePrice, dist)
dist_df <- dist_df[order(dist_df$dist),]
dist_df <- dist_df[1:k,]
num = 0
denom = 0
for (p in 1:nrow(dist_df)) {
if (dist_df$dist[p] != 0) {
num = num + dist_df$SalePrice[p] / dist_df$dist[p]
denom = denom + 1/dist_df$dist[p]
}
}
pred <- c(pred, num/denom)
}
return(pred)
}
start = Sys.time()
knn_predict_weighted(knn_train,knn_test[1,],8)
end=Sys.time()
end-start
chisq_dist <- function(x,y) {
d = 0
for (i in 1:length(x)) {
d = d + ((x[[i]] - y[[i]])^2 / (x[[i]] + y[[i]]))
}
return(d)
}
knn_predict_weighted <- function(training, test, k) {
pred <- c()
for (i in 1:nrow(test)) {
dist <- c()
for (j in 1:nrow(training)) {
#dist <- c(dist, manhattan_dist(test[i,], training[j,]))
dist <- c(dist, chisq_dist(test[i,], training[j,]))
}
dist_df <- data.frame(SalePrice = training$SalePrice, dist)
dist_df <- dist_df[order(dist_df$dist),]
dist_df <- dist_df[1:k,]
num = 0
denom = 0
for (p in 1:nrow(dist_df)) {
if (dist_df$dist[p] != 0) {
num = num + dist_df$SalePrice[p] / dist_df$dist[p]
denom = denom + 1/dist_df$dist[p]
}
}
pred <- c(pred, num/denom)
}
return(pred)
}
start = Sys.time()
knn_predict_weighted(knn_train,knn_test[1,],8)
end=Sys.time()
end-start
knn_pred <- knn_predict_weighted(knn_train, knn_test, 8)
knn_result <- data.frame(Id = test$Id, SalePrice = knn_pred)
write.csv(knn_result, "knn_k8_p9_w_chisq_rmoutlier.csv", row.names=FALSE)
